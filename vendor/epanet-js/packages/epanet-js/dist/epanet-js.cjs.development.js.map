{"version":3,"file":"epanet-js.cjs.development.js","sources":["../src/Workspace/Workspace.ts","../../../node_modules/tslib/tslib.es6.js","../src/Project/functions/Project.ts","../src/Project/functions/NetworkNode.ts","../src/Project/functions/HydraulicAnalysis.ts","../src/Project/functions/WaterQualityAnalysis.ts","../src/Project/functions/Reporting.ts","../src/Project/functions/AnalysisOptions.ts","../src/Project/functions/NodalDemand.ts","../src/Project/functions/NetworkLink.ts","../src/Project/functions/TimePattern.ts","../src/Project/functions/DataCurve.ts","../src/Project/functions/SimpleControl.ts","../src/Project/functions/RuleBasedControl.ts","../src/Project/Project.ts","../src/enum/ActionCodeType/ActionCodeType.ts","../src/enum/AnalysisStatistic/AnalysisStatistic.ts","../src/enum/ControlType/ControlType.ts","../src/enum/CountType/CountType.ts","../src/enum/CurveType/CurveType.ts","../src/enum/DemandModel/DemandModel.ts","../src/enum/FlowUnits/FlowUnits.ts","../src/enum/HeadLossType/HeadLossType.ts","../src/enum/InitHydOption/InitHydOption.ts","../src/enum/LinkProperty/LinkProperty.ts","../src/enum/LinkStatusType/LinkStatusType.ts","../src/enum/LinkType/LinkType.ts","../src/enum/MixingModel/MixingModel.ts","../src/enum/NodeProperty/NodeProperty.ts","../src/enum/NodeType/NodeType.ts","../src/enum/ObjectType/ObjectType.ts","../src/enum/Option/Option.ts","../src/enum/PumpStateType/PumpStateType.ts","../src/enum/PumpType/PumpType.ts","../src/enum/QualityType/QualityType.ts","../src/enum/RuleObject/RuleObject.ts","../src/enum/RuleOperator/RuleOperator.ts","../src/enum/RuleStatus/RuleStatus.ts","../src/enum/RuleVariable/RuleVariable.ts","../src/enum/SizeLimits/SizeLimits.ts","../src/enum/SourceType/SourceType.ts","../src/enum/StatisticType/StatisticType.ts","../src/enum/StatusReport/StatusReport.ts","../src/enum/TimeParameter/TimeParameter.ts","../src/OutputReader/index.ts"],"sourcesContent":["import { epanetEngine } from '@model-create/epanet-engine';\n\nclass Workspace {\n  _instance: EmscriptenModule;\n\n  _FS: EmscriptenFileSysten;\n  constructor() {\n    this._instance = epanetEngine;\n    this._FS = this._instance.FS;\n  }\n\n  get version() {\n    const intPointer = this._instance._malloc(4);\n    this._instance.getversion(intPointer);\n    const returnValue = this._instance.getValue(intPointer, 'i32');\n\n    this._instance._free(intPointer);\n\n    return returnValue;\n  }\n\n  getError(code: number) {\n    const title1Ptr = this._instance._malloc(256); //EN_MAXMSG\n    this._instance.geterror(code, title1Ptr);\n    const errMessage = this._instance.UTF8ToString(title1Ptr);\n    this._instance._free(title1Ptr);\n    return errMessage;\n  }\n\n  writeFile(path: string, data: string | ArrayBufferView) {\n    this._FS.writeFile(path, data);\n  }\n\n  readFile(file: string): string;\n  readFile(file: string, encoding: 'utf8'): string;\n  readFile(file: string, encoding: 'binary'): Uint8Array;\n  readFile(file: any, encoding?: 'utf8' | 'binary'): any {\n    if (!encoding || encoding === 'utf8') {\n      encoding = 'utf8';\n      return this._FS.readFile(file, {\n        encoding,\n      }) as string;\n    }\n    return this._FS.readFile(file, {\n      encoding,\n    }) as Uint8Array;\n  }\n}\n\nexport default Workspace;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import Project from '../Project';\nimport { CountType, FlowUnits, HeadLossType } from '../../index';\n\nclass ProjectFunctions {\n  close(this: Project) {\n    this._checkError(this._EN.close());\n  }\n\n  getCount(this: Project, obj: CountType): number {\n    const memory = this._allocateMemory('int');\n    this._checkError(this._EN.getcount(obj, ...memory));\n    return this._getValue(memory[0], 'int');\n  }\n\n  getTitle(this: Project) {\n    const memory = this._allocateMemory(\n      'char-title',\n      'char-title',\n      'char-title'\n    );\n    this._checkError(this._EN.gettitle(...memory));\n    return {\n      line1: this._getValue(memory[0], 'char'),\n      line2: this._getValue(memory[1], 'char'),\n      line3: this._getValue(memory[2], 'char'),\n    };\n  }\n\n  init(\n    this: Project,\n    rptFile: string,\n    outFile: string,\n    unitType: FlowUnits,\n    headLosstype: HeadLossType\n  ) {\n    this._checkError(this._EN.init(rptFile, outFile, unitType, headLosstype));\n  }\n\n  open(\n    this: Project,\n    inputFile: string,\n    reportFile: string,\n    outputFile: string\n  ) {\n    this._checkError(this._EN.open(inputFile, reportFile, outputFile));\n  }\n\n  // TODO: Include ability to have callback here\n  runProject(\n    this: Project,\n    inputFile: string,\n    reportFile: string,\n    outputFile: string\n  ) {\n    this._checkError(this._EN.runproject(inputFile, reportFile, outputFile));\n  }\n\n  saveInpFile(this: Project, filename: string) {\n    this._checkError(this._EN.saveinpfile(filename));\n  }\n\n  setTitle(this: Project, line1: string, line2: string, line3: string) {\n    this._checkError(this._EN.settitle(line1, line2, line3));\n  }\n}\n\nexport default ProjectFunctions;\n","import Project from '../Project';\nimport { NodeType, NodeProperty, ActionCodeType } from '../../index';\n\nclass NetworkNodeFunctions {\n  addNode(this: Project, id: string, nodeType: NodeType) {\n    const memory = this._allocateMemory('int');\n    this._checkError(this._EN.addnode(id, nodeType, ...memory));\n    return this._getValue(memory[0], 'int');\n  }\n\n  deleteNode(this: Project, index: number, actionCode: ActionCodeType) {\n    this._checkError(this._EN.deletenode(index, actionCode));\n  }\n\n  getNodeIndex(this: Project, id: string) {\n    const memory = this._allocateMemory('int');\n    this._checkError(this._EN.getnodeindex(id, ...memory));\n    return this._getValue(memory[0], 'int');\n  }\n\n  getNodeId(this: Project, index: number) {\n    const memory = this._allocateMemory('char');\n    this._checkError(this._EN.getnodeid(index, ...memory));\n    return this._getValue(memory[0], 'char');\n  }\n\n  setNodeId(this: Project, index: number, newid: string) {\n    this._checkError(this._EN.setnodeid(index, newid));\n  }\n\n  getNodeType(this: Project, index: number): NodeType {\n    const memory = this._allocateMemory('int');\n    this._checkError(this._EN.getnodetype(index, ...memory));\n    return this._getValue(memory[0], 'int');\n  }\n\n  getNodeValue(this: Project, index: number, property: NodeProperty) {\n    const memory = this._allocateMemory('double');\n    this._checkError(this._EN.getnodevalue(index, property, ...memory));\n    return this._getValue(memory[0], 'double');\n  }\n\n  setNodeValue(\n    this: Project,\n    index: number,\n    property: NodeProperty,\n    value: number\n  ) {\n    this._checkError(this._EN.setnodevalue(index, property, value));\n  }\n\n  setJunctionData(\n    this: Project,\n    index: number,\n    elev: number,\n    dmnd: number,\n    dmndpat: string\n  ) {\n    this._checkError(this._EN.setjuncdata(index, elev, dmnd, dmndpat));\n  }\n\n  setTankData(\n    this: Project,\n    index: number,\n    elev: number,\n    initlvl: number,\n    minlvl: number,\n    maxlvl: number,\n    diam: number,\n    minvol: number,\n    volcurve: string\n  ) {\n    this._checkError(\n      this._EN.settankdata(\n        index,\n        elev,\n        initlvl,\n        minlvl,\n        maxlvl,\n        diam,\n        minvol,\n        volcurve\n      )\n    );\n  }\n\n  getCoordinates(this: Project, index: number) {\n    const memory = this._allocateMemory('double', 'double');\n    this._checkError(this._EN.getcoord(index, ...memory));\n    return {\n      x: this._getValue(memory[0], 'double'),\n      y: this._getValue(memory[1], 'double'),\n    };\n  }\n\n  setCoordinates(this: Project, index: number, x: number, y: number) {\n    this._checkError(this._EN.setcoord(index, x, y));\n  }\n}\n\nexport default NetworkNodeFunctions;\n","import Project from '../Project';\nimport { InitHydOption } from '../../index';\n\nclass HydraulicAnalysisFunctions {\n  solveH(this: Project) {\n    this._checkError(this._EN.solveH());\n  }\n\n  useHydFile(this: Project, filename: string) {\n    this._checkError(this._EN.usehydfile(filename));\n  }\n\n  openH(this: Project) {\n    this._checkError(this._EN.openH());\n  }\n\n  initH(this: Project, initFlag: InitHydOption) {\n    this._checkError(this._EN.initH(initFlag));\n  }\n\n  runH(this: Project): number {\n    const memory = this._allocateMemory('long');\n    this._checkError(this._EN.runH(...memory));\n    return this._getValue(memory[0], 'long');\n  }\n\n  nextH(this: Project): number {\n    const memory = this._allocateMemory('long');\n    this._checkError(this._EN.nextH(...memory));\n    return this._getValue(memory[0], 'long');\n  }\n\n  saveH(this: Project) {\n    this._checkError(this._EN.saveH());\n  }\n\n  saveHydFile(this: Project, filename: string) {\n    this._checkError(this._EN.savehydfile(filename));\n  }\n\n  closeH(this: Project) {\n    this._checkError(this._EN.closeH());\n  }\n}\n\nexport default HydraulicAnalysisFunctions;\n","import Project from '../Project';\nimport { InitHydOption } from '../../index';\n\nclass WaterQualityAnalysisFunctions {\n  solveQ(this: Project) {\n    this._checkError(this._EN.solveQ());\n  }\n\n  openQ(this: Project) {\n    this._checkError(this._EN.openQ());\n  }\n\n  initQ(this: Project, initFlag: InitHydOption.Save | InitHydOption.NoSave) {\n    this._checkError(this._EN.initQ(initFlag));\n  }\n\n  runQ(this: Project): number {\n    const memory = this._allocateMemory('long');\n    this._checkError(this._EN.runQ(...memory));\n    return this._getValue(memory[0], 'long');\n  }\n\n  nextQ(this: Project): number {\n    const memory = this._allocateMemory('long');\n    this._checkError(this._EN.nextQ(...memory));\n    return this._getValue(memory[0], 'long');\n  }\n\n  stepQ(this: Project): number {\n    const memory = this._allocateMemory('long');\n    this._checkError(this._EN.stepQ(...memory));\n    return this._getValue(memory[0], 'long');\n  }\n\n  closeQ(this: Project) {\n    this._checkError(this._EN.closeQ());\n  }\n}\n\nexport default WaterQualityAnalysisFunctions;\n","import Project from '../Project';\nimport { ObjectType, AnalysisStatistic, StatusReport } from '../../index';\n\nclass ReportingFunctions {\n  writeLine(this: Project, line: string) {\n    this._checkError(this._EN.writeline(line));\n  }\n\n  report(this: Project) {\n    this._checkError(this._EN.report());\n  }\n\n  copyReport(this: Project, filename: string) {\n    this._checkError(this._EN.copyreport(filename));\n  }\n\n  clearReport(this: Project) {\n    this._checkError(this._EN.clearreport());\n  }\n\n  resetReport(this: Project) {\n    this._checkError(this._EN.resetreport());\n  }\n\n  setReport(this: Project, format: string) {\n    this._checkError(this._EN.setreport(format));\n  }\n\n  setStatusReport(this: Project, level: StatusReport) {\n    this._checkError(this._EN.setstatusreport(level));\n  }\n\n  getStatistic(this: Project, type: AnalysisStatistic) {\n    const memory = this._allocateMemory('double');\n    this._checkError(this._EN.getstatistic(type, ...memory));\n    return this._getValue(memory[0], 'double');\n  }\n\n  getResultIndex(\n    this: Project,\n    type: ObjectType.Node | ObjectType.Link,\n    index: number\n  ) {\n    const memory = this._allocateMemory('int');\n    this._checkError(this._EN.getresultindex(type, index, ...memory));\n    return this._getValue(memory[0], 'int');\n  }\n}\n\nexport default ReportingFunctions;\n","import Project from '../Project';\nimport { FlowUnits, Option, QualityType, TimeParameter } from '../../index';\n\nclass AnalysisOptionsFunctions {\n  getFlowUnits(this: Project): FlowUnits {\n    const memory = this._allocateMemory('int');\n    this._checkError(this._EN.getflowunits(...memory));\n    return this._getValue(memory[0], 'int');\n  }\n\n  getOption(this: Project, option: Option): number {\n    const memory = this._allocateMemory('double');\n    this._checkError(this._EN.getoption(option, ...memory));\n    return this._getValue(memory[0], 'double');\n  }\n\n  getQualityInfo(this: Project) {\n    const memory = this._allocateMemory('int', 'char', 'char', 'int');\n    this._checkError(this._EN.getqualinfo(...memory));\n    return {\n      qualType: this._getValue(memory[0], 'int') as QualityType,\n      chemName: this._getValue(memory[1], 'char'),\n      chemUnits: this._getValue(memory[2], 'char'),\n      traceNode: this._getValue(memory[3], 'int'),\n    };\n  }\n\n  getQualityType(this: Project) {\n    const memory = this._allocateMemory('int', 'int');\n    this._checkError(this._EN.getqualtype(...memory));\n    return {\n      qualType: this._getValue(memory[0], 'int') as QualityType,\n      traceNode: this._getValue(memory[1], 'int'),\n    };\n  }\n\n  getTimeParameter(this: Project, param: TimeParameter): number {\n    const memory = this._allocateMemory('long');\n    this._checkError(this._EN.gettimeparam(param, ...memory));\n    return this._getValue(memory[0], 'long');\n  }\n\n  setFlowUnits(this: Project, units: FlowUnits) {\n    this._checkError(this._EN.setflowunits(units));\n  }\n\n  setOption(this: Project, option: Option, value: number) {\n    this._checkError(this._EN.setoption(option, value));\n  }\n\n  setQualityType(\n    this: Project,\n    qualType: QualityType,\n    chemName: string,\n    chemUnits: string,\n    traceNode: string\n  ) {\n    this._checkError(\n      this._EN.setqualtype(qualType, chemName, chemUnits, traceNode)\n    );\n  }\n\n  setTimeParameter(this: Project, param: TimeParameter, value: number) {\n    this._checkError(this._EN.settimeparam(param, value));\n  }\n}\n\nexport default AnalysisOptionsFunctions;\n","import Project from '../Project';\nimport { DemandModel } from '../../index';\n\nclass NodalDemandFunctions {\n  addDemand(\n    this: Project,\n    nodeIndex: number,\n    baseDemand: number,\n    demandPattern: string,\n    demandName: string\n  ) {\n    this._checkError(\n      this._EN.adddemand(nodeIndex, baseDemand, demandPattern, demandName)\n    );\n  }\n\n  deleteDemand(this: Project, nodeIndex: number, demandIndex: number) {\n    this._checkError(this._EN.deletedemand(nodeIndex, demandIndex));\n  }\n\n  getBaseDemand(this: Project, nodeIndex: number, demandIndex: number) {\n    const memory = this._allocateMemory('double');\n    this._checkError(this._EN.getbasedemand(nodeIndex, demandIndex, ...memory));\n    return this._getValue(memory[0], 'double');\n  }\n\n  getDemandIndex(this: Project, nodeIndex: number, demandName: string) {\n    const memory = this._allocateMemory('int');\n    this._checkError(this._EN.getdemandindex(nodeIndex, demandName, ...memory));\n    return this._getValue(memory[0], 'int');\n  }\n\n  getDemandModel(this: Project) {\n    const memory = this._allocateMemory('int', 'double', 'double', 'double');\n    this._checkError(this._EN.getdemandmodel(...memory));\n    return {\n      type: this._getValue(memory[0], 'int') as DemandModel,\n      pmin: this._getValue(memory[1], 'double'),\n      preq: this._getValue(memory[2], 'double'),\n      pexp: this._getValue(memory[3], 'double'),\n    };\n  }\n\n  getDemandName(this: Project, nodeIndex: number, demandIndex: number) {\n    const memory = this._allocateMemory('char');\n    this._checkError(this._EN.getdemandname(nodeIndex, demandIndex, ...memory));\n    return this._getValue(memory[0], 'char');\n  }\n\n  getDemandPattern(this: Project, nodeIndex: number, demandIndex: number) {\n    const memory = this._allocateMemory('int');\n    this._checkError(\n      this._EN.getdemandpattern(nodeIndex, demandIndex, ...memory)\n    );\n    return this._getValue(memory[0], 'int');\n  }\n\n  getNumberOfDemands(this: Project, nodeIndex: number) {\n    const memory = this._allocateMemory('int');\n    this._checkError(this._EN.getnumdemands(nodeIndex, ...memory));\n    return this._getValue(memory[0], 'int');\n  }\n\n  setBaseDemand(\n    this: Project,\n    nodeIndex: number,\n    demandIndex: number,\n    baseDemand: number\n  ) {\n    this._checkError(\n      this._EN.setbasedemand(nodeIndex, demandIndex, baseDemand)\n    );\n  }\n  setDemandModel(\n    this: Project,\n    type: DemandModel,\n    pmin: number,\n    preq: number,\n    pexp: number\n  ) {\n    this._checkError(this._EN.setdemandmodel(type, pmin, preq, pexp));\n  }\n  setDemandName(\n    this: Project,\n    nodeIndex: number,\n    demandIdx: number,\n    demandName: string\n  ) {\n    this._checkError(this._EN.setdemandname(nodeIndex, demandIdx, demandName));\n  }\n  setDemandPattern(\n    this: Project,\n    nodeIndex: number,\n    demandIndex: number,\n    patIndex: number\n  ) {\n    this._checkError(\n      this._EN.setdemandpattern(nodeIndex, demandIndex, patIndex)\n    );\n  }\n}\n\nexport default NodalDemandFunctions;\n","import Project from '../Project';\nimport { LinkType, ActionCodeType, LinkProperty, PumpType } from '../../index';\n\nclass NetworkLinkFunctions {\n  addLink(\n    this: Project,\n    id: string,\n    linkType: LinkType,\n    fromNode: string,\n    toNode: string\n  ) {\n    const memory = this._allocateMemory('int');\n    this._checkError(\n      this._EN.addlink(id, linkType, fromNode, toNode, ...memory)\n    );\n    return this._getValue(memory[0], 'int');\n  }\n\n  deleteLink(this: Project, index: number, actionCode: ActionCodeType) {\n    this._checkError(this._EN.deletelink(index, actionCode));\n  }\n\n  getLinkIndex(this: Project, id: string) {\n    const memory = this._allocateMemory('int');\n    this._checkError(this._EN.getlinkindex(id, ...memory));\n    return this._getValue(memory[0], 'int');\n  }\n\n  getLinkId(this: Project, index: number) {\n    const memory = this._allocateMemory('char');\n    this._checkError(this._EN.getlinkid(index, ...memory));\n    return this._getValue(memory[0], 'char');\n  }\n\n  setLinkId(this: Project, index: number, newid: string) {\n    this._checkError(this._EN.setlinkid(index, newid));\n  }\n\n  getLinkType(this: Project, index: number): LinkType {\n    const memory = this._allocateMemory('int');\n    this._checkError(this._EN.getlinktype(index, ...memory));\n    return this._getValue(memory[0], 'int');\n  }\n\n  setLinkType(\n    this: Project,\n    index: number,\n    linkType: LinkType,\n    actionCode: ActionCodeType\n  ) {\n    // Index is In/Out for setlinktype API\n    const memory = this._allocateMemory('int');\n    this._instance.setValue(memory[0], index, 'i32');\n    this._checkError(this._EN.setlinktype(memory[0], linkType, actionCode));\n    return this._getValue(memory[0], 'int');\n  }\n\n  getLinkNodes(this: Project, index: number) {\n    const memory = this._allocateMemory('int', 'int');\n    this._checkError(this._EN.getlinknodes(index, ...memory));\n    return {\n      node1: this._getValue(memory[0], 'int'),\n      node2: this._getValue(memory[1], 'int'),\n    };\n  }\n\n  setLinkNodes(this: Project, index: number, node1: number, node2: number) {\n    this._checkError(this._EN.setlinknodes(index, node1, node2));\n  }\n\n  getLinkValue(this: Project, index: number, property: LinkProperty) {\n    const memory = this._allocateMemory('double');\n    this._checkError(this._EN.getlinkvalue(index, property, ...memory));\n    return this._getValue(memory[0], 'double');\n  }\n\n  setLinkValue(this: Project, index: number, property: number, value: number) {\n    this._checkError(this._EN.setlinkvalue(index, property, value));\n  }\n\n  setPipeData(\n    this: Project,\n    index: number,\n    length: number,\n    diam: number,\n    rough: number,\n    mloss: number\n  ) {\n    this._checkError(this._EN.setpipedata(index, length, diam, rough, mloss));\n  }\n\n  getPumpType(this: Project, index: number): PumpType {\n    const memory = this._allocateMemory('int');\n    this._checkError(this._EN.getpumptype(index, ...memory));\n    return this._getValue(memory[0], 'int');\n  }\n\n  getHeadCurveIndex(this: Project, linkIndex: number) {\n    const memory = this._allocateMemory('int');\n    this._checkError(this._EN.getheadcurveindex(linkIndex, ...memory));\n    return this._getValue(memory[0], 'int');\n  }\n\n  setHeadCurveIndex(this: Project, linkIndex: number, curveIndex: number) {\n    this._checkError(this._EN.setheadcurveindex(linkIndex, curveIndex));\n  }\n\n  getVertexCount(this: Project, index: number) {\n    const memory = this._allocateMemory('int');\n    this._checkError(this._EN.getvertexcount(index, ...memory));\n    return this._getValue(memory[0], 'int');\n  }\n\n  getVertex(this: Project, index: number, vertex: number) {\n    const memory = this._allocateMemory('double', 'double');\n    this._checkError(this._EN.getvertex(index, vertex, ...memory));\n    return {\n      x: this._getValue(memory[0], 'double'),\n      y: this._getValue(memory[1], 'double'),\n    };\n  }\n\n  setVertices(this: Project, index: number, x: number[], y: number[]) {\n    if (x.length !== y.length) {\n      throw new Error(\n        `X and Y vertex arrays must have the same length - X length: ${x.length}, Y length ${y.length}`\n      );\n    }\n\n    var xPtr = this._allocateMemoryForArray(x);\n    var yPtr = this._allocateMemoryForArray(y);\n\n    this._checkError(this._EN.setvertices(index, xPtr, yPtr, x.length));\n\n    // Free memory\n    this._instance._free(xPtr);\n    this._instance._free(yPtr);\n  }\n}\n\nexport default NetworkLinkFunctions;\n","import Project from '../Project';\n\nclass TimePatternFunctions {\n  addPattern(this: Project, id: string) {\n    this._checkError(this._EN.addpattern(id));\n  }\n\n  deletePattern(this: Project, index: number) {\n    this._checkError(this._EN.deletepattern(index));\n  }\n\n  getPatternIndex(this: Project, id: string) {\n    const memory = this._allocateMemory('int');\n    this._checkError(this._EN.getpatternindex(id, ...memory));\n    return this._getValue(memory[0], 'int');\n  }\n\n  getPatternId(this: Project, index: number) {\n    const memory = this._allocateMemory('char');\n    this._checkError(this._EN.getpatternid(index, ...memory));\n    return this._getValue(memory[0], 'char');\n  }\n\n  setPatternId(this: Project, index: number, id: string) {\n    this._checkError(this._EN.setpatternid(index, id));\n  }\n\n  getPatternLength(this: Project, index: number) {\n    const memory = this._allocateMemory('int');\n    this._checkError(this._EN.getpatternlen(index, ...memory));\n    return this._getValue(memory[0], 'int');\n  }\n\n  getPatternValue(this: Project, index: number, period: number) {\n    const memory = this._allocateMemory('double');\n    this._checkError(this._EN.getpatternvalue(index, period, ...memory));\n    return this._getValue(memory[0], 'double');\n  }\n\n  setPatternValue(this: Project, index: number, period: number, value: number) {\n    this._checkError(this._EN.setpatternvalue(index, period, value));\n  }\n\n  getAveragePatternValue(this: Project, index: number) {\n    const memory = this._allocateMemory('double');\n    this._checkError(this._EN.getaveragepatternvalue(index, ...memory));\n    return this._getValue(memory[0], 'double');\n  }\n\n  setPattern(this: Project, index: number, values: number[]) {\n    var valuesPtr = this._allocateMemoryForArray(values);\n\n    this._checkError(this._EN.setpattern(index, valuesPtr, values.length));\n\n    // Free memory\n    this._instance._free(valuesPtr);\n  }\n}\n\nexport default TimePatternFunctions;\n","import Project from '../Project';\nimport { CurveType } from '../../index';\n\nclass DataCurveFunctions {\n  addCurve(this: Project, id: string) {\n    this._checkError(this._EN.addcurve(id));\n  }\n\n  deleteCurve(this: Project, index: number) {\n    this._checkError(this._EN.deletecurve(index));\n  }\n\n  getCurveIndex(this: Project, id: string) {\n    const memory = this._allocateMemory('int');\n    this._checkError(this._EN.getcurveindex(id, ...memory));\n    return this._getValue(memory[0], 'int');\n  }\n\n  getCurveId(this: Project, index: number) {\n    const memory = this._allocateMemory('char');\n    this._checkError(this._EN.getcurveid(index, ...memory));\n    return this._getValue(memory[0], 'char');\n  }\n\n  setCurveId(this: Project, index: number, id: string) {\n    this._checkError(this._EN.setcurveid(index, id));\n  }\n\n  getCurveLenth(this: Project, index: number) {\n    const memory = this._allocateMemory('int');\n    this._checkError(this._EN.getcurvelen(index, ...memory));\n    return this._getValue(memory[0], 'int');\n  }\n\n  getCurveType(this: Project, index: number): CurveType {\n    const memory = this._allocateMemory('int');\n    this._checkError(this._EN.getcurvetype(index, ...memory));\n    return this._getValue(memory[0], 'int');\n  }\n\n  getCurveValue(this: Project, curveIndex: number, pointIndex: number) {\n    const memory = this._allocateMemory('double', 'double');\n    this._checkError(this._EN.getcurvevalue(curveIndex, pointIndex, ...memory));\n    return {\n      x: this._getValue(memory[0], 'double'),\n      y: this._getValue(memory[1], 'double'),\n    };\n  }\n\n  setCurveValue(\n    this: Project,\n    curveIndex: number,\n    pointIndex: number,\n    x: number,\n    y: number\n  ) {\n    this._checkError(this._EN.setcurvevalue(curveIndex, pointIndex, x, y));\n  }\n\n  setCurve(this: Project, index: number, xValues: number[], yValues: number[]) {\n    if (xValues.length !== yValues.length) {\n      throw new Error(\n        `X and Y vertex arrays must have the same length - X length: ${xValues.length}, Y length ${yValues.length}`\n      );\n    }\n\n    var xPtr = this._allocateMemoryForArray(xValues);\n    var yPtr = this._allocateMemoryForArray(yValues);\n\n    this._checkError(this._EN.setcurve(index, xPtr, yPtr, xValues.length));\n\n    // Free memory\n    this._instance._free(xPtr);\n    this._instance._free(yPtr);\n  }\n}\n\nexport default DataCurveFunctions;\n","import Project from '../Project';\nimport { ControlType } from '../../index';\n\nclass SimpleControlFunctions {\n  addControl(\n    this: Project,\n    type: ControlType,\n    linkIndex: number,\n    setting: number,\n    nodeIndex: number,\n    level: number\n  ) {\n    const memory = this._allocateMemory('int');\n    this._checkError(\n      this._EN.addcontrol(type, linkIndex, setting, nodeIndex, level, ...memory)\n    );\n    return this._getValue(memory[0], 'int');\n  }\n\n  deleteControl(this: Project, index: number) {\n    this._checkError(this._EN.deletecontrol(index));\n  }\n\n  getControl(this: Project, index: number) {\n    const memory = this._allocateMemory(\n      'int',\n      'int',\n      'double',\n      'int',\n      'double'\n    );\n    this._checkError(this._EN.getcontrol(index, ...memory));\n    return {\n      type: this._getValue(memory[0], 'int') as ControlType,\n      linkIndex: this._getValue(memory[1], 'int'),\n      setting: this._getValue(memory[2], 'double'),\n      nodeIndex: this._getValue(memory[3], 'int'),\n      level: this._getValue(memory[4], 'double'),\n    };\n  }\n\n  setControl(\n    this: Project,\n    index: number,\n    type: ControlType,\n    linkIndex: number,\n    setting: number,\n    nodeIndex: number,\n    level: number\n  ) {\n    this._checkError(\n      this._EN.setcontrol(index, type, linkIndex, setting, nodeIndex, level)\n    );\n  }\n}\n\nexport default SimpleControlFunctions;\n","import Project from '../Project';\nimport {\n  RuleStatus,\n  RuleObject,\n  RuleVariable,\n  RuleOperator,\n} from '../../index';\n\nclass RuleBasedControlFunctions {\n  addRule(this: Project, rule: string) {\n    this._checkError(this._EN.addrule(rule));\n  }\n\n  deleteRule(this: Project, index: number) {\n    this._checkError(this._EN.deleterule(index));\n  }\n\n  getRule(this: Project, index: number) {\n    const memory = this._allocateMemory('int', 'int', 'int', 'double');\n    this._checkError(this._EN.getrule(index, ...memory));\n    return {\n      premiseCount: this._getValue(memory[0], 'int'),\n      thenActionCount: this._getValue(memory[1], 'int'),\n      elseActionCount: this._getValue(memory[2], 'int'),\n      priority: this._getValue(memory[3], 'double'),\n    };\n  }\n\n  getRuleId(this: Project, index: number) {\n    const memory = this._allocateMemory('char');\n    this._checkError(this._EN.getruleID(index, ...memory));\n    return this._getValue(memory[0], 'char');\n  }\n\n  getPremise(this: Project, ruleIndex: number, premiseIndex: number) {\n    const memory = this._allocateMemory(\n      'int',\n      'int',\n      'int',\n      'int',\n      'int',\n      'int',\n      'double'\n    );\n    this._checkError(this._EN.getpremise(ruleIndex, premiseIndex, ...memory));\n    return {\n      logop: this._getValue(memory[0], 'int'),\n      object: this._getValue(memory[1], 'int') as RuleObject,\n      objIndex: this._getValue(memory[2], 'int'),\n      variable: this._getValue(memory[3], 'int') as RuleVariable,\n      relop: this._getValue(memory[4], 'int') as RuleOperator,\n      status: this._getValue(memory[5], 'int') as RuleStatus,\n      value: this._getValue(memory[6], 'double'),\n    };\n  }\n\n  setPremise(\n    this: Project,\n    ruleIndex: number,\n    premiseIndex: number,\n    logop: number,\n    object: RuleObject,\n    objIndex: number,\n    variable: RuleVariable,\n    relop: RuleOperator,\n    status: RuleStatus,\n    value: number\n  ) {\n    this._checkError(\n      this._EN.setpremise(\n        ruleIndex,\n        premiseIndex,\n        logop,\n        object,\n        objIndex,\n        variable,\n        relop,\n        status,\n        value\n      )\n    );\n  }\n\n  setPremiseIndex(\n    this: Project,\n    ruleIndex: number,\n    premiseIndex: number,\n    objIndex: number\n  ) {\n    this._checkError(\n      this._EN.setpremiseindex(ruleIndex, premiseIndex, objIndex)\n    );\n  }\n\n  setPremiseStatus(\n    this: Project,\n    ruleIndex: number,\n    premiseIndex: number,\n    status: RuleStatus\n  ) {\n    this._checkError(\n      this._EN.setpremisestatus(ruleIndex, premiseIndex, status)\n    );\n  }\n\n  setPremiseValue(\n    this: Project,\n    ruleIndex: number,\n    premiseIndex: number,\n    value: number\n  ) {\n    this._checkError(this._EN.setpremisevalue(ruleIndex, premiseIndex, value));\n  }\n\n  getThenAction(this: Project, ruleIndex: number, actionIndex: number) {\n    const memory = this._allocateMemory('int', 'int', 'double');\n    this._checkError(this._EN.getthenaction(ruleIndex, actionIndex, ...memory));\n    return {\n      linkIndex: this._getValue(memory[0], 'int'),\n      status: this._getValue(memory[1], 'int') as RuleStatus,\n      setting: this._getValue(memory[2], 'double'),\n    };\n  }\n\n  setThenAction(\n    this: Project,\n    ruleIndex: number,\n    actionIndex: number,\n    linkIndex: number,\n    status: RuleStatus,\n    setting: number\n  ) {\n    this._checkError(\n      this._EN.setthenaction(ruleIndex, actionIndex, linkIndex, status, setting)\n    );\n  }\n\n  getElseAction(this: Project, ruleIndex: number, actionIndex: number) {\n    const memory = this._allocateMemory('int', 'int', 'double');\n    this._checkError(this._EN.getelseaction(ruleIndex, actionIndex, ...memory));\n    return {\n      linkIndex: this._getValue(memory[0], 'int'),\n      status: this._getValue(memory[1], 'int') as RuleStatus,\n      setting: this._getValue(memory[2], 'double'),\n    };\n  }\n\n  setElseAction(\n    this: Project,\n    ruleIndex: number,\n    actionIndex: number,\n    linkIndex: number,\n    status: RuleStatus,\n    setting: number\n  ) {\n    this._checkError(\n      this._EN.setelseaction(ruleIndex, actionIndex, linkIndex, status, setting)\n    );\n  }\n\n  setRulePriority(this: Project, index: number, priority: number) {\n    this._checkError(this._EN.setrulepriority(index, priority));\n  }\n}\n\nexport default RuleBasedControlFunctions;\n","import Workspace from 'Workspace/Workspace';\nimport {\n  ProjectFunctions,\n  NetworkNodeFunctions,\n  HydraulicAnalysisFunctions,\n  WaterQualityAnalysisFunctions,\n  ReportingFunctions,\n  AnalysisOptionsFunctions,\n  NodalDemandFunctions,\n  NetworkLinkFunctions,\n  TimePatternFunctions,\n  DataCurveFunctions,\n  SimpleControlFunctions,\n  RuleBasedControlFunctions,\n} from './functions';\n\ninterface MemoryTypes {\n  int: number;\n  long: number;\n  double: number;\n  char: string;\n}\n\nclass Project\n  implements\n    ProjectFunctions,\n    NetworkNodeFunctions,\n    HydraulicAnalysisFunctions,\n    WaterQualityAnalysisFunctions,\n    ReportingFunctions,\n    AnalysisOptionsFunctions,\n    NetworkLinkFunctions,\n    TimePatternFunctions,\n    DataCurveFunctions,\n    SimpleControlFunctions,\n    RuleBasedControlFunctions {\n  _ws: Workspace;\n\n  _instance: EmscriptenModule;\n\n  _EN: EpanetProject;\n  constructor(ws: Workspace) {\n    this._ws = ws;\n    this._instance = ws._instance;\n    this._EN = new this._ws._instance.Epanet();\n  }\n\n  _getValue<T extends keyof MemoryTypes>(\n    pointer: number,\n    type: T\n  ): MemoryTypes[T];\n  _getValue(pointer: number, type: keyof MemoryTypes) {\n    let value;\n    if (type === 'char') {\n      value = this._instance.UTF8ToString(pointer);\n    } else {\n      const size = type === 'int' ? 'i32' : type === 'long' ? 'i64' : 'double';\n      value = this._instance.getValue(pointer, size);\n    }\n    this._instance._free(pointer);\n    return value;\n  }\n\n  // TODO: There is probably a better way to do this then overloading however\n  //       first attempts to use ...operator in arguments worked, I couldn't\n  //       figure out how to then have a set length tuple which we need to\n  //       spread over the C function with memory address.\n  //       Limit inputs to specific strings, at the moment anything can be inputted\n  //       into this function and you will get 8 bytes of memory\n\n  _allocateMemory(v1: string): [number];\n  _allocateMemory(v1: string, v2: string): [number, number];\n  _allocateMemory(v1: string, v2: string, v3: string): [number, number, number];\n  _allocateMemory(\n    v1: string,\n    v2: string,\n    v3: string,\n    v4: string\n  ): [number, number, number, number];\n  _allocateMemory(\n    v1: string,\n    v2: string,\n    v3: string,\n    v4: string,\n    v5: string\n  ): [number, number, number, number, number];\n  _allocateMemory(\n    v1: string,\n    v2: string,\n    v3: string,\n    v4: string,\n    v5: string,\n    v6: string,\n    v7: string\n  ): [number, number, number, number, number, number, number];\n  _allocateMemory(v1: any): any {\n    if (typeof v1 != 'string') {\n      throw new Error('Method _allocateMemory expected string');\n    }\n    const types = Array.prototype.slice.call(arguments);\n    return types.reduce((acc, t) => {\n      let memsize;\n      switch (t) {\n        case 'char':\n          memsize = 32; //MAXID in EPANET\n          break;\n\n        case 'char-title':\n          memsize = 80; //TITLELEN in EPANET\n          break;\n\n        case 'int':\n          memsize = 4;\n          break;\n\n        default:\n          memsize = 8; //Double\n          break;\n      }\n      const pointer = this._instance._malloc(memsize);\n      return acc.concat(pointer);\n    }, [] as number[]);\n  }\n\n  _allocateMemoryForArray(arr: number[]): number {\n    const typedArray = new Float64Array(arr);\n    const nDataBytes = typedArray.length * typedArray.BYTES_PER_ELEMENT;\n    const dataPtr = this._instance._malloc(nDataBytes);\n\n    this._instance.HEAP8.set(new Uint8Array(typedArray.buffer), dataPtr);\n\n    return dataPtr;\n  }\n\n  _checkError(errorCode: number) {\n    if (errorCode === 0) {\n      return;\n    } else if (errorCode < 100) {\n      console.warn(`epanet-js: ${this._ws.getError(errorCode)}`);\n      return;\n    }\n    const errorMsg = this._ws.getError(errorCode);\n    throw new Error(errorMsg);\n  }\n\n  // Implementing function classes\n\n  // Project Functions\n  open = ProjectFunctions.prototype.open;\n  close = ProjectFunctions.prototype.close;\n  runProject = ProjectFunctions.prototype.runProject;\n  init = ProjectFunctions.prototype.init;\n  getCount = ProjectFunctions.prototype.getCount;\n  getTitle = ProjectFunctions.prototype.getTitle;\n  setTitle = ProjectFunctions.prototype.setTitle;\n  saveInpFile = ProjectFunctions.prototype.saveInpFile;\n\n  // Hydraulic Analysis Functions\n  solveH = HydraulicAnalysisFunctions.prototype.solveH;\n  useHydFile = HydraulicAnalysisFunctions.prototype.useHydFile;\n  openH = HydraulicAnalysisFunctions.prototype.openH;\n  initH = HydraulicAnalysisFunctions.prototype.initH;\n  runH = HydraulicAnalysisFunctions.prototype.runH;\n  nextH = HydraulicAnalysisFunctions.prototype.nextH;\n  saveH = HydraulicAnalysisFunctions.prototype.saveH;\n  saveHydFile = HydraulicAnalysisFunctions.prototype.saveHydFile;\n  closeH = HydraulicAnalysisFunctions.prototype.closeH;\n\n  // Water Quality Analysis Functions\n  solveQ = WaterQualityAnalysisFunctions.prototype.solveQ;\n  openQ = WaterQualityAnalysisFunctions.prototype.openQ;\n  initQ = WaterQualityAnalysisFunctions.prototype.initQ;\n  runQ = WaterQualityAnalysisFunctions.prototype.runQ;\n  nextQ = WaterQualityAnalysisFunctions.prototype.nextQ;\n  stepQ = WaterQualityAnalysisFunctions.prototype.stepQ;\n  closeQ = WaterQualityAnalysisFunctions.prototype.closeQ;\n\n  // Reporting Functions\n  writeLine = ReportingFunctions.prototype.writeLine;\n  report = ReportingFunctions.prototype.report;\n  copyReport = ReportingFunctions.prototype.copyReport;\n  clearReport = ReportingFunctions.prototype.clearReport;\n  resetReport = ReportingFunctions.prototype.resetReport;\n  setReport = ReportingFunctions.prototype.setReport;\n  setStatusReport = ReportingFunctions.prototype.setStatusReport;\n  getStatistic = ReportingFunctions.prototype.getStatistic;\n  getResultIndex = ReportingFunctions.prototype.getResultIndex;\n\n  // Analysis Options Functions\n  getFlowUnits = AnalysisOptionsFunctions.prototype.getFlowUnits;\n  getOption = AnalysisOptionsFunctions.prototype.getOption;\n  getQualityInfo = AnalysisOptionsFunctions.prototype.getQualityInfo;\n  getQualityType = AnalysisOptionsFunctions.prototype.getQualityType;\n  getTimeParameter = AnalysisOptionsFunctions.prototype.getTimeParameter;\n  setFlowUnits = AnalysisOptionsFunctions.prototype.setFlowUnits;\n  setOption = AnalysisOptionsFunctions.prototype.setOption;\n  setQualityType = AnalysisOptionsFunctions.prototype.setQualityType;\n  setTimeParameter = AnalysisOptionsFunctions.prototype.setTimeParameter;\n\n  //Network Node Functions\n  addNode = NetworkNodeFunctions.prototype.addNode;\n  deleteNode = NetworkNodeFunctions.prototype.deleteNode;\n  getNodeIndex = NetworkNodeFunctions.prototype.getNodeIndex;\n  getNodeId = NetworkNodeFunctions.prototype.getNodeId;\n  setNodeId = NetworkNodeFunctions.prototype.setNodeId;\n  getNodeType = NetworkNodeFunctions.prototype.getNodeType;\n  getNodeValue = NetworkNodeFunctions.prototype.getNodeValue;\n  setNodeValue = NetworkNodeFunctions.prototype.setNodeValue;\n  setJunctionData = NetworkNodeFunctions.prototype.setJunctionData;\n  setTankData = NetworkNodeFunctions.prototype.setTankData;\n  getCoordinates = NetworkNodeFunctions.prototype.getCoordinates;\n  setCoordinates = NetworkNodeFunctions.prototype.setCoordinates;\n\n  // Nodal Demand Functions\n  addDemand = NodalDemandFunctions.prototype.addDemand;\n  deleteDemand = NodalDemandFunctions.prototype.deleteDemand;\n  getBaseDemand = NodalDemandFunctions.prototype.getBaseDemand;\n  getDemandIndex = NodalDemandFunctions.prototype.getDemandIndex;\n  getDemandModel = NodalDemandFunctions.prototype.getDemandModel;\n  getDemandName = NodalDemandFunctions.prototype.getDemandName;\n  getDemandPattern = NodalDemandFunctions.prototype.getDemandPattern;\n  getNumberOfDemands = NodalDemandFunctions.prototype.getNumberOfDemands;\n  setBaseDemand = NodalDemandFunctions.prototype.setBaseDemand;\n  setDemandModel = NodalDemandFunctions.prototype.setDemandModel;\n  setDemandName = NodalDemandFunctions.prototype.setDemandName;\n  setDemandPattern = NodalDemandFunctions.prototype.setDemandPattern;\n\n  // Network Link Functions\n  addLink = NetworkLinkFunctions.prototype.addLink;\n  deleteLink = NetworkLinkFunctions.prototype.deleteLink;\n  getLinkIndex = NetworkLinkFunctions.prototype.getLinkIndex;\n  getLinkId = NetworkLinkFunctions.prototype.getLinkId;\n  setLinkId = NetworkLinkFunctions.prototype.setLinkId;\n  getLinkType = NetworkLinkFunctions.prototype.getLinkType;\n  setLinkType = NetworkLinkFunctions.prototype.setLinkType;\n  getLinkNodes = NetworkLinkFunctions.prototype.getLinkNodes;\n  setLinkNodes = NetworkLinkFunctions.prototype.setLinkNodes;\n  getLinkValue = NetworkLinkFunctions.prototype.getLinkValue;\n  setLinkValue = NetworkLinkFunctions.prototype.setLinkValue;\n  setPipeData = NetworkLinkFunctions.prototype.setPipeData;\n  getPumpType = NetworkLinkFunctions.prototype.getPumpType;\n  getHeadCurveIndex = NetworkLinkFunctions.prototype.getHeadCurveIndex;\n  setHeadCurveIndex = NetworkLinkFunctions.prototype.setHeadCurveIndex;\n  getVertexCount = NetworkLinkFunctions.prototype.getVertexCount;\n  getVertex = NetworkLinkFunctions.prototype.getVertex;\n  setVertices = NetworkLinkFunctions.prototype.setVertices;\n\n  // Time Pattern Functions\n  addPattern = TimePatternFunctions.prototype.addPattern;\n  deletePattern = TimePatternFunctions.prototype.deletePattern;\n  getPatternIndex = TimePatternFunctions.prototype.getPatternIndex;\n  getPatternId = TimePatternFunctions.prototype.getPatternId;\n  setPatternId = TimePatternFunctions.prototype.setPatternId;\n  getPatternLength = TimePatternFunctions.prototype.getPatternLength;\n  getPatternValue = TimePatternFunctions.prototype.getPatternValue;\n  setPatternValue = TimePatternFunctions.prototype.setPatternValue;\n  getAveragePatternValue =\n    TimePatternFunctions.prototype.getAveragePatternValue;\n  setPattern = TimePatternFunctions.prototype.setPattern;\n\n  // Data Curve Functions\n  addCurve = DataCurveFunctions.prototype.addCurve;\n  deleteCurve = DataCurveFunctions.prototype.deleteCurve;\n  getCurveIndex = DataCurveFunctions.prototype.getCurveIndex;\n  getCurveId = DataCurveFunctions.prototype.getCurveId;\n  setCurveId = DataCurveFunctions.prototype.setCurveId;\n  getCurveLenth = DataCurveFunctions.prototype.getCurveLenth;\n  getCurveType = DataCurveFunctions.prototype.getCurveType;\n  getCurveValue = DataCurveFunctions.prototype.getCurveValue;\n  setCurveValue = DataCurveFunctions.prototype.setCurveValue;\n  setCurve = DataCurveFunctions.prototype.setCurve;\n\n  // Simple Control Functions\n  addControl = SimpleControlFunctions.prototype.addControl;\n  deleteControl = SimpleControlFunctions.prototype.deleteControl;\n  getControl = SimpleControlFunctions.prototype.getControl;\n  setControl = SimpleControlFunctions.prototype.setControl;\n\n  // Rule-Based Control Functions\n  addRule = RuleBasedControlFunctions.prototype.addRule;\n  deleteRule = RuleBasedControlFunctions.prototype.deleteRule;\n  getRule = RuleBasedControlFunctions.prototype.getRule;\n  getRuleId = RuleBasedControlFunctions.prototype.getRuleId;\n  getPremise = RuleBasedControlFunctions.prototype.getPremise;\n  setPremise = RuleBasedControlFunctions.prototype.setPremise;\n  setPremiseIndex = RuleBasedControlFunctions.prototype.setPremiseIndex;\n  setPremiseStatus = RuleBasedControlFunctions.prototype.setPremiseStatus;\n  setPremiseValue = RuleBasedControlFunctions.prototype.setPremiseValue;\n  getThenAction = RuleBasedControlFunctions.prototype.getThenAction;\n  setThenAction = RuleBasedControlFunctions.prototype.setThenAction;\n  getElseAction = RuleBasedControlFunctions.prototype.getElseAction;\n  setElseAction = RuleBasedControlFunctions.prototype.setElseAction;\n  setRulePriority = RuleBasedControlFunctions.prototype.setRulePriority;\n}\n\nexport default Project;\n","enum ActionCodeType {\n  Unconditional = 0, //!< Delete all controls and connecing links\n  Conditional = 1, //!< Cancel object deletion if it appears in controls or has connecting links\n}\n\nexport default ActionCodeType;\n","enum AnalysisStatistic {\n  Iterations = 0, //!< Number of hydraulic iterations taken\n  RelativeError = 1, //!< Sum of link flow changes / sum of link flows\n  MaxHeadError = 2, //!< Largest head loss error for links\n  MaxFlowChange = 3, //!< Largest flow change in links\n  MassBalance = 4, //!< Cumulative water quality mass balance ratio\n  DeficientNodes = 5, //!< Number of pressure deficient nodes\n  DemandReduction = 6, //!< % demand reduction at pressure deficient nodes\n}\n\nexport default AnalysisStatistic;\n","enum ControlType {\n  LowLevel = 0, //!< Act when pressure or tank level drops below a setpoint\n  HiLevel = 1, //!< Act when pressure or tank level rises above a setpoint\n  Timer = 2, //!< Act at a prescribed elapsed amount of time\n  TimeOfDay = 3, //!< Act at a particular time of day\n}\n\nexport default ControlType;\n","enum CountType {\n  NodeCount = 0, //!< Number of nodes (junctions + tanks + reservoirs)\n  TankCount = 1, //!< Number of tanks and reservoirs\n  LinkCount = 2, //!< Number of links (pipes + pumps + valves)\n  PatCount = 3, //!< Number of time patterns\n  CurveCount = 4, //!< Number of data curves\n  ControlCount = 5, //!< Number of simple controls\n  RuleCount = 6, //!< Number of rule-based controls\n}\n\nexport default CountType;\n","enum CurveType {\n  VolumeCurve = 0, //!< Tank volume v. depth curve\n  PumpCurve = 1, //!< Pump head v. flow curve\n  EfficCurve = 2, //!< Pump efficiency v. flow curve\n  HlossCurve = 3, //!< Valve head loss v. flow curve\n  GenericCurve = 4, //!< Generic curve\n}\n\nexport default CurveType;\n","enum DemandModel {\n  DDA = 0, //!< Demand driven analysis\n  PDA = 1, //!< Pressure driven analysis\n}\n\nexport default DemandModel;\n","enum FlowUnits {\n  CFS = 0, //!< Cubic feet per second\n  GPM = 1, //!< Gallons per minute\n  MGD = 2, //!< Million gallons per day\n  IMGD = 3, //!< Imperial million gallons per day\n  AFD = 4, //!< Acre-feet per day\n  LPS = 5, //!< Liters per second\n  LPM = 6, //!< Liters per minute\n  MLD = 7, //!< Million liters per day\n  CMH = 8, //!< Cubic meters per hour\n  CMD = 9, //!< Cubic meters per day\n}\n\nexport default FlowUnits;\n","enum HeadLossType {\n  HW = 0, //!< Hazen-Williams\n  DW = 1, //!< Darcy-Weisbach\n  CM = 2, //!< Chezy-Manning\n}\nexport default HeadLossType;\n","enum InitHydOption {\n  NoSave = 0, //!< Don't save hydraulics; don't re-initialize flows\n  Save = 1, //!< Save hydraulics to file, don't re-initialize flows\n  InitFlow = 10, //!< Don't save hydraulics; re-initialize flows\n  SaveAndInit = 11, //!< Save hydraulics; re-initialize flows\n}\n\nexport default InitHydOption;\n","enum LinkProperty {\n  Diameter = 0, //!< Pipe/valve diameter\n  Length = 1, //!< Pipe length\n  Roughness = 2, //!< Pipe roughness coefficient\n  MinorLoss = 3, //!< Pipe/valve minor loss coefficient\n  InitStatus = 4, //!< Initial status (see @ref EN_LinkStatusType)\n  InitSetting = 5, //!< Initial pump speed or valve setting\n  KBulk = 6, //!< Bulk chemical reaction coefficient\n  KWall = 7, //!< Pipe wall chemical reaction coefficient\n  Flow = 8, //!< Current computed flow rate (read only)\n  Velocity = 9, //!< Current computed flow velocity (read only)\n  Headloss = 10, //!< Current computed head loss (read only)\n  Status = 11, //!< Current link status (see @ref EN_LinkStatusType)\n  Setting = 12, //!< Current link setting\n  Energy = 13, //!< Current computed pump energy usage (read only)\n  LinkQual = 14, //!< Current computed link quality (read only)\n  LinkPattern = 15, //!< Pump speed time pattern index\n  PumpState = 16, //!< Current computed pump state (read only) (see @ref EN_PumpStateType)\n  PumpEffic = 17, //!< Current computed pump efficiency (read only)\n  PumpPower = 18, //!< Pump constant power rating\n  PumpHCurve = 19, //!< Pump head v. flow curve index\n  PumpECurve = 20, //!< Pump efficiency v. flow curve index\n  PumpECost = 21, //!< Pump average energy price\n  PumpEPat = 22, //!< Pump energy price time pattern index\n}\n\nexport default LinkProperty;\n","enum LinkStatusType {\n  Closed = 0,\n  Open = 1,\n}\n\nexport default LinkStatusType;\n","enum LinkType {\n  CVPipe = 0, //!< Pipe with check valve\n  Pipe = 1, //!< Pipe\n  Pump = 2, //!< Pump\n  PRV = 3, //!< Pressure reducing valve\n  PSV = 4, //!< Pressure sustaining valve\n  PBV = 5, //!< Pressure breaker valve\n  FCV = 6, //!< Flow control valve\n  TCV = 7, //!< Throttle control valve\n  GPV = 8, //!< General purpose valve\n}\n\nexport default LinkType;\n","enum MixingModel {\n  Mix1 = 0, //!< Complete mix model\n  Mix2 = 1, //!< 2-compartment model\n  FIFO = 2, //!< First in, first out model\n  LIFO = 3, //!< Last in, first out model\n}\n\nexport default MixingModel;\n","enum NodeProperty {\n  Elevation = 0, //!< Elevation\n  BaseDemand = 1, //!< Primary demand baseline value\n  Pattern = 2, //!< Primary demand time pattern index\n  Emitter = 3, //!< Emitter flow coefficient\n  Initqual = 4, //!< Initial quality\n  SourceQual = 5, //!< Quality source strength\n  SourcePat = 6, //!< Quality source pattern index\n  SourceType = 7, //!< Quality source type (see @ref EN_SourceType)\n  TankLevel = 8, //!< Current computed tank water level (read only)\n  Demand = 9, //!< Current computed demand (read only)\n  Head = 10, //!< Current computed hydraulic head (read only)\n  Pressure = 11, //!< Current computed pressure (read only)\n  Quality = 12, //!< Current computed quality (read only)\n  SourceMass = 13, //!< Current computed quality source mass inflow (read only)\n  InitVolume = 14, //!< Tank initial volume (read only)\n  MixModel = 15, //!< Tank mixing model (see @ref EN_MixingModel)\n  MixZoneVol = 16, //!< Tank mixing zone volume (read only)\n  TankDiam = 17, //!< Tank diameter\n  MinVolume = 18, //!< Tank minimum volume\n  VolCurve = 19, //!< Tank volume curve index\n  MinLevel = 20, //!< Tank minimum level\n  MaxLevel = 21, //!< Tank maximum level\n  MixFraction = 22, //!< Tank mixing fraction\n  TankKBulk = 23, //!< Tank bulk decay coefficient\n  TankVolume = 24, //!< Current computed tank volume (read only)\n  MaxVolume = 25, //!< Tank maximum volume (read only)\n  CanOverFlow = 26, //!< Tank can overflow (= 1) or not (= 0)\n  DemandDeficit = 27, //!< Amount that full demand is reduced under PDA (read only)\n}\n\nexport default NodeProperty;\n","enum NodeType {\n  Junction = 0, //!< Junction node\n  Reservoir = 1, //!< Reservoir node\n  Tank = 2, //!< Storage tank node\n}\n\nexport default NodeType;\n","enum ObjectType {\n  Node = 0, //!< Nodes\n  Link = 1, //!< Links\n  TimePat = 2, //!< Time patterns\n  Curve = 3, //!< Data curves\n  Control = 4, //!< Simple controls\n  Rule = 5, //!< Control rules\n}\n\nexport default ObjectType;\n","enum Option {\n  Trials = 0, //!< Maximum trials allowed for hydraulic convergence\n  Accuracy = 1, //!< Total normalized flow change for hydraulic convergence\n  Tolerance = 2, //!< Water quality tolerance\n  Emitexpon = 3, //!< Exponent in emitter discharge formula\n  DemandMult = 4, //!< Global demand multiplier\n  HeadError = 5, //!< Maximum head loss error for hydraulic convergence\n  FlowChange = 6, //!< Maximum flow change for hydraulic convergence\n  HeadlossForm = 7, //!< Head loss formula (see @ref EN_HeadLossType)\n  GlobalEffic = 8, //!< Global pump efficiency (percent)\n  GlobalPrice = 9, //!< Global energy price per KWH\n  GlobalPattern = 10, //!< Index of a global energy price pattern\n  DemandCharge = 11, //!< Energy charge per max. KW usage\n  SpGravity = 12, //!< Specific gravity\n  SpViscos = 13, //!< Specific viscosity (relative to water at 20 deg C)\n  Unbalanced = 14, //!< Extra trials allowed if hydraulics don't converge\n  CheckFreq = 15, //!< Frequency of hydraulic status checks\n  MaxCheck = 16, //!< Maximum trials for status checking\n  DampLimit = 17, //!< Accuracy level where solution damping begins\n  SpDiffus = 18, //!< Specific diffusivity (relative to chlorine at 20 deg C)\n  BulkOrder = 19, //!< Bulk water reaction order for pipes\n  WallOrder = 20, //!< Wall reaction order for pipes (either 0 or 1)\n  TankOrder = 21, //!< Bulk water reaction order for tanks\n  ConcenLimit = 22, //!< Limiting concentration for growth reactions\n}\n\nexport default Option;\n","enum PumpStateType {\n  PumpXHead = 0, //!< Pump closed - cannot supply head\n  PumpClosed = 2, //!< Pump closed\n  PumpOpen = 3, //!< Pump open\n  PumpXFlow = 5, //!< Pump open - cannot supply flow\n}\n\nexport default PumpStateType;\n","enum PumpType {\n  ConstHP = 0, //!< Constant horsepower\n  PowerFunc = 1, //!< Power function\n  Custom = 2, //!< User-defined custom curve\n  NoCurve = 3, //!< No curve\n}\n\nexport default PumpType;\n","enum QualityType {\n  None = 0, //!< No quality analysis\n  Chem = 1, //!< Chemical fate and transport\n  Age = 2, //!< Water age analysis\n  Trace = 3, //!< Source tracing analysis\n}\n\nexport default QualityType;\n","enum RuleObject {\n  Node = 6, //!< Clause refers to a node\n  Link = 7, //!< Clause refers to a link\n  System = 8, //!< Clause refers to a system parameter (e.g., time)\n}\n\nexport default RuleObject;\n","enum RuleOperator {\n  EqualTo = 0, //!< Equal to | EN_R_EQ\n  NotEqualTo = 1, //!< Not equal | EN_R_NE\n  LessOrEqualTo = 2, //!< Less than or equal to | EN_R_LE\n  GreaterOrEqualTo = 3, //!< Greater than or equal to | EN_R_GE\n  LessThan = 4, //!< Less than | EN_R_LT\n  GreaterThan = 5, //!< Greater than | EN_R_GT\n  Is = 6, //!< Is equal to | EN_R_IS\n  Not = 7, //!< Is not equal to | EN_R_NOT\n  Below = 8, //!< Is below | EN_R_BELOW\n  Above = 9, //!< Is above | EN_R_ABOVE\n}\n\nexport default RuleOperator;\n","enum RuleStatus {\n  IsOpen = 1, //!< Link is open\n  IsClosed = 2, //!< Link is closed\n  IsActive = 3, //!< Control valve is active\n}\n\nexport default RuleStatus;\n","enum RuleVariable {\n  Demand = 0, //!< Nodal demand\n  Head = 1, //!< Nodal hydraulic head\n  Grade = 2, //!< Nodal hydraulic grade\n  Level = 3, //!< Tank water level\n  Pressure = 4, //!< Nodal pressure\n  Flow = 5, //!< Link flow rate\n  Status = 6, //!< Link status\n  Setting = 7, //!< Link setting\n  Power = 8, //!< Pump power output\n  Time = 9, //!< Elapsed simulation time\n  ClockTime = 10, //!< Time of day\n  FillTime = 11, //!< Time to fill a tank\n  DrainTime = 12, //!< Time to drain a tank\n}\n\nexport default RuleVariable;\n","enum SizeLimits {\n  MaxId = 31, //!< Max. # characters in ID name\n  MaxMsg = 255, //!< Max. # characters in message text\n}\n\nexport default SizeLimits;\n","enum SourceType {\n  Concen = 0, //!< Sets the concentration of external inflow entering a node\n  Mass = 1, //!< Injects a given mass/minute into a node\n  SetPoint = 2, //!< Sets the concentration leaving a node to a given value\n  FlowPaced = 3, //!< Adds a given value to the concentration leaving a node\n}\n\nexport default SourceType;\n","enum StatisticType {\n  Series = 0, //!< Report all time series points\n  Average = 1, //!< Report average value over simulation period\n  Minimum = 2, //!< Report minimum value over simulation period\n  Maximum = 3, //!< Report maximum value over simulation period\n  Range = 4, //!< Report maximum - minimum over simulation period\n}\n\nexport default StatisticType;\n","enum StatusReport {\n  NoReport = 0, //!< No status reporting\n  NormalReport = 1, //!< Normal level of status reporting\n  FullReport = 2, //!< Full level of status reporting\n}\n\nexport default StatusReport;\n","enum TimeParameter {\n  Duration = 0, //!< Total simulation duration\n  HydStep = 1, //!< Hydraulic time step\n  QualStep = 2, //!< Water quality time step\n  PatternStep = 3, //!< Time pattern period\n  PatternStart = 4, //!< Time when time patterns begin\n  ReportStep = 5, //!< Reporting time step\n  ReportStart = 6, //!< Time when reporting starts\n  RuleStep = 7, //!< Rule-based control evaluation time step\n  Statistic = 8, //!< Reporting statistic code (see @ref EN_StatisticType)\n  Periods = 9, //!< Number of reporting time periods (read only)\n  StartTime = 10, //!< Simulation starting time of day\n  HTime = 11, //!< Elapsed time of current hydraulic solution (read only)\n  QTime = 12, //!< Elapsed time of current quality solution (read only)\n  HaltFlag = 13, //!< Flag indicating if the simulation was halted (read only)\n  NextEvent = 14, //!< Shortest time until a tank becomes empty or full (read only)\n  NextEventTank = 15, //!< Index of tank with shortest time to become empty or full (read only)\n}\n\nexport default TimeParameter;\n","import { LinkType, NodeType } from '../index';\n\nenum NodeResultTypes {\n  Demand,\n  Head,\n  Pressure,\n  WaterQuality,\n}\n\nenum LinkResultTypes {\n  Flow,\n  Velocity,\n  Headloss,\n  AvgWaterQuality,\n  Status,\n  Setting,\n  ReactionRate,\n  Friction,\n}\n\nconst idBytes = 32;\n\nexport interface LinkResults {\n  id: string;\n  type: LinkType;\n  flow: number[];\n  velocity: number[];\n  headloss: number[];\n  avgWaterQuality: number[];\n  status: number[];\n  setting: number[];\n  reactionRate: number[];\n  friction: number[];\n}\n\nexport interface NodeResults {\n  id: string;\n  type: NodeType;\n  demand: number[];\n  head: number[];\n  pressure: number[];\n  waterQuality: number[];\n}\n\nexport interface EpanetProlog {\n  nodeCount: number;\n  resAndTankCount: number;\n  linkCount: number;\n  pumpCount: number;\n  valveCount: number;\n  reportingPeriods: number;\n}\n\nexport interface EpanetResults {\n  prolog: EpanetProlog;\n  results: {\n    nodes: NodeResults[];\n    links: LinkResults[];\n  };\n}\n\nexport function readBinary(results: Uint8Array): EpanetResults {\n  const view1 = new DataView(results.buffer);\n  const prolog: EpanetProlog = {\n    nodeCount: view1.getInt32(8, true),\n    resAndTankCount: view1.getInt32(12, true),\n    linkCount: view1.getInt32(16, true),\n    pumpCount: view1.getInt32(20, true),\n    valveCount: view1.getInt32(24, true),\n    reportingPeriods: view1.getInt32(results.byteLength - 12, true),\n  };\n\n  const offsetNodeIds = 884;\n  const offsetLinkIds = offsetNodeIds + idBytes * prolog.nodeCount;\n  const offsetLinkTypes =\n    offsetNodeIds + 32 * prolog.nodeCount + 40 * prolog.linkCount;\n  const offsetNodeIndexes =\n    offsetNodeIds + 32 * prolog.nodeCount + 44 * prolog.linkCount;\n  const offsetResults =\n    offsetNodeIds +\n    36 * prolog.nodeCount +\n    52 * prolog.linkCount +\n    8 * prolog.resAndTankCount +\n    28 * prolog.pumpCount +\n    4;\n\n  const nodeIds = getIds(offsetNodeIds, prolog.nodeCount, view1);\n  const nodeTypes = getNodeTypes(\n    offsetNodeIndexes,\n    prolog.nodeCount,\n    prolog.resAndTankCount,\n    view1\n  );\n  const linkIds = getIds(offsetLinkIds, prolog.linkCount, view1);\n  const linkTypes = getLinkTypes(offsetLinkTypes, prolog.linkCount, view1);\n\n  const nodes: NodeResults[] = [...Array(prolog.nodeCount)].map((_, i) => {\n    return getNodeResults(\n      prolog,\n      offsetResults,\n      i,\n      view1,\n      nodeIds[i],\n      nodeTypes[i]\n    );\n  });\n  const links: LinkResults[] = [...Array(prolog.linkCount)].map((_, i) => {\n    return getLinkResults(\n      prolog,\n      offsetResults,\n      i,\n      view1,\n      linkIds[i],\n      linkTypes[i]\n    );\n  });\n\n  const data: EpanetResults = {\n    prolog,\n    results: {\n      nodes,\n      links,\n    },\n  };\n  return data;\n}\n\nconst getIds = (\n  offset: number,\n  count: number,\n  dataView: DataView\n): string[] => {\n  const ids: string[] = [];\n\n  forEachIndex(count, index => {\n    const arrayBuffer = dataView.buffer.slice(\n      offset + idBytes * index,\n      offset + idBytes * index + idBytes\n    );\n    ids.push(stringFrom(arrayBuffer));\n  });\n\n  return ids;\n};\n\nconst getNodeTypes = (\n  offset: number,\n  nodeCount: number,\n  resAndTankCount: number,\n  dataView: DataView\n): NodeType[] => {\n  const types: NodeType[] = [];\n  const [resAndTankIndexes, resAndTankAreas] = getResAndTanksData(\n    offset,\n    resAndTankCount,\n    dataView\n  );\n\n  forEachIndex(nodeCount, index => {\n    if (!resAndTankIndexes.includes(index)) {\n      types.push(NodeType.Junction);\n      return;\n    }\n\n    if (resAndTankAreas[resAndTankIndexes.indexOf(index)] === 0.0) {\n      types.push(NodeType.Reservoir);\n      return;\n    }\n\n    types.push(NodeType.Tank);\n  });\n\n  return types;\n};\n\nconst getResAndTanksData = (\n  offsetNodeIndexes: number,\n  count: number,\n  dataView: DataView\n): [number[], number[]] => {\n  const indexes: number[] = [];\n  const areas: number[] = [];\n  const offsetAreas = offsetNodeIndexes + 4 * count;\n\n  forEachIndex(count, index => {\n    const nodeIndex = dataView.getInt32(offsetNodeIndexes + 4 * index, true);\n    indexes.push(nodeIndex - 1);\n    areas.push(dataView.getFloat32(offsetAreas + 4 * index, true));\n  });\n\n  return [indexes, areas];\n};\n\nconst getLinkTypes = (\n  offset: number,\n  count: number,\n  dataView: DataView\n): LinkType[] => {\n  const types: LinkType[] = [];\n\n  forEachIndex(count, index => {\n    const position = offset + 4 * index;\n    const type = dataView.getInt32(position, true);\n    types.push(type);\n  });\n\n  return types;\n};\n\nconst getNodeResults = (\n  prolog: EpanetProlog,\n  offsetResults: number,\n  nodeIndex: number,\n  dataView: DataView,\n  id: string,\n  type: NodeType\n): NodeResults => {\n  const nodeResults = {\n    id,\n    type,\n    demand: [],\n    head: [],\n    pressure: [],\n    waterQuality: [],\n  };\n\n  const result: NodeResults = [\n    'demand',\n    'head',\n    'pressure',\n    'waterQuality',\n  ].reduce((map, obj, i) => {\n    return {\n      ...map,\n      [obj]: getResultByteOffSet(\n        prolog,\n        offsetResults,\n        true,\n        nodeIndex,\n        i\n      ).map(x => dataView.getFloat32(x, true)),\n    };\n  }, nodeResults);\n\n  return result;\n};\n\nconst getLinkResults = (\n  prolog: EpanetProlog,\n  offsetResults: number,\n  linkIndex: number,\n  dataView: DataView,\n  id: string,\n  type: LinkType\n): LinkResults => {\n  const linkResults = {\n    id: id,\n    type,\n    flow: [],\n    velocity: [],\n    headloss: [],\n    avgWaterQuality: [],\n    status: [],\n    setting: [],\n    reactionRate: [],\n    friction: [],\n  };\n\n  const result: LinkResults = [\n    'flow',\n    'velocity',\n    'headloss',\n    'avgWaterQuality',\n    'status',\n    'setting',\n    'reactionRate',\n    'friction',\n  ].reduce((map, obj, i) => {\n    return {\n      ...map,\n      [obj]: getResultByteOffSet(\n        prolog,\n        offsetResults,\n        false,\n        linkIndex,\n        i\n      ).map(x => dataView.getFloat32(x, true)),\n    };\n  }, linkResults);\n\n  return result;\n};\n\nconst getResultByteOffSet = (\n  prolog: EpanetProlog,\n  offsetResults: number,\n  isNode: boolean,\n  objIndex: number,\n  resultType: NodeResultTypes | LinkResultTypes\n): number[] => {\n  const linkResultOffset = isNode ? 0 : 16 * prolog.nodeCount;\n  const typeCount = isNode ? prolog.nodeCount : prolog.linkCount;\n  const resultSize = 16 * prolog.nodeCount + 32 * prolog.linkCount;\n  const answer = [...Array(prolog.reportingPeriods)].map(\n    (_, i) =>\n      offsetResults +\n      resultSize * i +\n      linkResultOffset +\n      4 * objIndex +\n      4 * resultType * typeCount\n  );\n  return answer;\n};\n\nconst forEachIndex = (count: number, callback: (index: number) => void) => {\n  for (let i = 0; i < count; ++i) {\n    callback(i);\n  }\n};\n\nconst stringFrom = (arrayBuffer: ArrayBuffer): string => {\n  const array = new Uint8Array(arrayBuffer);\n  const arrayNumber = Array.from(array).filter(o => o > 0);\n  return String.fromCharCode.apply(null, arrayNumber);\n};\n"],"names":["_instance","epanetEngine","_FS","FS","Object","Workspace","intPointer","_malloc","getversion","returnValue","getValue","_free","code","title1Ptr","geterror","errMessage","UTF8ToString","path","data","writeFile","file","encoding","readFile","__assign","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArrays","il","r","Array","k","a","j","jl","ProjectFunctions","_checkError","_EN","close","obj","memory","_allocateMemory","_a","getcount","_getValue","gettitle","line1","line2","line3","rptFile","outFile","unitType","headLosstype","init","inputFile","reportFile","outputFile","open","runproject","filename","saveinpfile","settitle","NetworkNodeFunctions","id","nodeType","addnode","index","actionCode","deletenode","getnodeindex","getnodeid","newid","setnodeid","getnodetype","property","getnodevalue","value","setnodevalue","elev","dmnd","dmndpat","setjuncdata","initlvl","minlvl","maxlvl","diam","minvol","volcurve","settankdata","getcoord","x","y","setcoord","HydraulicAnalysisFunctions","solveH","usehydfile","openH","initFlag","initH","runH","nextH","saveH","savehydfile","closeH","WaterQualityAnalysisFunctions","solveQ","openQ","initQ","runQ","nextQ","stepQ","closeQ","ReportingFunctions","line","writeline","report","copyreport","clearreport","resetreport","format","setreport","level","setstatusreport","type","getstatistic","getresultindex","AnalysisOptionsFunctions","getflowunits","option","getoption","getqualinfo","qualType","chemName","chemUnits","traceNode","getqualtype","param","gettimeparam","units","setflowunits","setoption","setqualtype","settimeparam","NodalDemandFunctions","nodeIndex","baseDemand","demandPattern","demandName","adddemand","demandIndex","deletedemand","getbasedemand","getdemandindex","getdemandmodel","pmin","preq","pexp","getdemandname","getdemandpattern","getnumdemands","setbasedemand","setdemandmodel","demandIdx","setdemandname","patIndex","setdemandpattern","NetworkLinkFunctions","linkType","fromNode","toNode","addlink","deletelink","getlinkindex","getlinkid","setlinkid","getlinktype","setValue","setlinktype","getlinknodes","node1","node2","setlinknodes","getlinkvalue","setlinkvalue","rough","mloss","setpipedata","getpumptype","linkIndex","getheadcurveindex","curveIndex","setheadcurveindex","getvertexcount","vertex","getvertex","Error","xPtr","_allocateMemoryForArray","yPtr","setvertices","TimePatternFunctions","addpattern","deletepattern","getpatternindex","getpatternid","setpatternid","getpatternlen","period","getpatternvalue","setpatternvalue","getaveragepatternvalue","values","valuesPtr","setpattern","DataCurveFunctions","addcurve","deletecurve","getcurveindex","getcurveid","setcurveid","getcurvelen","getcurvetype","pointIndex","getcurvevalue","setcurvevalue","xValues","yValues","setcurve","SimpleControlFunctions","setting","addcontrol","deletecontrol","getcontrol","setcontrol","RuleBasedControlFunctions","rule","addrule","deleterule","getrule","premiseCount","thenActionCount","elseActionCount","priority","getruleID","ruleIndex","premiseIndex","getpremise","logop","object","objIndex","variable","relop","status","setpremise","setpremiseindex","setpremisestatus","setpremisevalue","actionIndex","getthenaction","setthenaction","getelseaction","setelseaction","setrulepriority","ws","runProject","getCount","getTitle","setTitle","saveInpFile","useHydFile","saveHydFile","writeLine","copyReport","clearReport","resetReport","setReport","setStatusReport","getStatistic","getResultIndex","getFlowUnits","getOption","getQualityInfo","getQualityType","getTimeParameter","setFlowUnits","setOption","setQualityType","setTimeParameter","addNode","deleteNode","getNodeIndex","getNodeId","setNodeId","getNodeType","getNodeValue","setNodeValue","setJunctionData","setTankData","getCoordinates","setCoordinates","addDemand","deleteDemand","getBaseDemand","getDemandIndex","getDemandModel","getDemandName","getDemandPattern","getNumberOfDemands","setBaseDemand","setDemandModel","setDemandName","setDemandPattern","addLink","deleteLink","getLinkIndex","getLinkId","setLinkId","getLinkType","setLinkType","getLinkNodes","setLinkNodes","getLinkValue","setLinkValue","setPipeData","getPumpType","getHeadCurveIndex","setHeadCurveIndex","getVertexCount","getVertex","setVertices","addPattern","deletePattern","getPatternIndex","getPatternId","setPatternId","getPatternLength","getPatternValue","setPatternValue","getAveragePatternValue","setPattern","addCurve","deleteCurve","getCurveIndex","getCurveId","setCurveId","getCurveLenth","getCurveType","getCurveValue","setCurveValue","setCurve","addControl","deleteControl","getControl","setControl","addRule","deleteRule","getRule","getRuleId","getPremise","setPremise","setPremiseIndex","setPremiseStatus","setPremiseValue","getThenAction","setThenAction","getElseAction","setElseAction","setRulePriority","_ws","Epanet","Project","pointer","size","v1","types","slice","reduce","acc","memsize","_this","concat","arr","typedArray","Float64Array","nDataBytes","BYTES_PER_ELEMENT","dataPtr","HEAP8","set","Uint8Array","buffer","errorCode","console","warn","getError","errorMsg","ActionCodeType","AnalysisStatistic","ControlType","CountType","CurveType","DemandModel","FlowUnits","HeadLossType","InitHydOption","LinkProperty","LinkStatusType","LinkType","MixingModel","NodeProperty","NodeType","ObjectType","Option","PumpStateType","PumpType","QualityType","RuleObject","RuleOperator","RuleStatus","RuleVariable","SizeLimits","SourceType","StatisticType","StatusReport","TimeParameter","NodeResultTypes","LinkResultTypes","idBytes","readBinary","results","view1","DataView","prolog","nodeCount","getInt32","resAndTankCount","linkCount","pumpCount","valveCount","reportingPeriods","byteLength","offsetNodeIds","offsetLinkIds","offsetLinkTypes","offsetNodeIndexes","offsetResults","nodeIds","getIds","nodeTypes","getNodeTypes","linkIds","linkTypes","getLinkTypes","nodes","map","_","getNodeResults","links","getLinkResults","offset","count","dataView","ids","forEachIndex","arrayBuffer","push","stringFrom","resAndTankIndexes","resAndTankAreas","includes","Junction","indexOf","Reservoir","Tank","getResAndTanksData","indexes","areas","offsetAreas","getFloat32","position","nodeResults","demand","head","pressure","waterQuality","result","getResultByteOffSet","linkResults","flow","velocity","headloss","avgWaterQuality","reactionRate","friction","isNode","resultType","linkResultOffset","typeCount","resultSize","answer","callback","array","arrayNumber","from","filter","o","String","fromCharCode"],"mappings":"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"}